remove.packages("Rcpp")
install.packages("Rcpp")
## Check the empirical results
con <- file("emp_log.log")
sink(con, append=TRUE)
sink(con, append=TRUE, type="message")
# This will echo all input and not truncate 150+ character lines...
source("empiric_test.R", echo=TRUE, max.deparse.length=10000)
con <- file("emp_log.log")
sink(con, append=TRUE)
sink(con, append=TRUE, type="message")
# This will echo all input and not truncate 150+ character lines...
source("empiric_test.R", echo=TRUE, max.deparse.length=10000)
# Restore output to console
sink()
sink(type="message")
# And look at the log...
cat(readLines("emp_log.log"), sep="\n")
# Inflationsrate
inflation_data <- data.frame(
year = 2000:2023,
inflation_rate = c(
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
inflation_data
einkaufs_wert <- 1000
kauf_jahr <- 2000
infl_faktor <- prod((1 + inflation_data[which(inflation_data[1, ] == kauf_jahr):dim(inflation_data)[2], 2]))
infl_faktor
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
year = 2000:2023,
inflation_rate = c(
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[1, ] == kauf_jahr):dim(inflation_data)[2], 2]))
return(einkaufs_wert * infl_faktor * abschlag)
}
marktWertKalk(1000, 2000)
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
year = 2000:2023,
inflation_rate = c(
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[1, ] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
return(einkaufs_wert * infl_faktor * abschlag)
}
marktWertKalk(1000, 2000)
marktWertKalk(750, 2015, 1)
marktWertKalk(750, 2015, 1)
kauf_jahr == 2015
kauf_jahr <- 2015
inflation_data[1, ] == kauf_jahr
infl_faktor <- prod((1 + inflation_data[which(inflation_data[, 1] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
year = 2000:2023,
inflation_rate = c(
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[, 1] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
return(einkaufs_wert * infl_faktor * abschlag)
}
marktWertKalk(750, 2015, 1)
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
Jahr = 1990:2023,
Inflationsrate = c(
2.7, 3.5, 5.0, 4.5, 2.7, 1.9, 1.4, 1.9, 0.8, 0.7,
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[, 1] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
return(einkaufs_wert * infl_faktor * abschlag)
}
marktWertKalk(826, 1995, 1)
marktWertKalk(14425.17, 2003, 1)
marktWertKalk(22004.47, 2003, 1)
marktWertKalk(1735.18, 2003, 0.6)
marktWertKalk(523.77, 2003, 1)
return(round(einkaufs_wert * infl_faktor * abschlag), 2)
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
Jahr = 1990:2023,
Inflationsrate = c(
2.7, 3.5, 5.0, 4.5, 2.7, 1.9, 1.4, 1.9, 0.8, 0.7,
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[, 1] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
return(round(einkaufs_wert * infl_faktor * abschlag), 2)
}
marktWertKalk(523.77, 2003, 1)
marktWertKalk <- function(einkaufs_wert, kauf_jahr, abschlag = 0.6){
# Inflationsrate
inflation_data <- data.frame(
Jahr = 1990:2023,
Inflationsrate = c(
2.7, 3.5, 5.0, 4.5, 2.7, 1.9, 1.4, 1.9, 0.8, 0.7,
1.4, 1.9, 1.3, 1.0, 1.6, 1.5, 1.6, 2.3, 2.6, 0.3,
1.1, 2.1, 2.0, 1.5, 0.9, 0.3, 0.5, 1.5, 1.8, 1.4,
0.5, 3.1, 6.9, 5.9
)
)
infl_faktor <- prod((1 + inflation_data[which(inflation_data[, 1] == kauf_jahr):dim(inflation_data)[2], 2] / 100))
return(round(einkaufs_wert * infl_faktor * abschlag, 2))
}
marktWertKalk(523.77, 2003, 1)
marktWertKalk(53714.52, 2003, 1)
1000 * 1000 * 5000 > 100000000
??qtr2month
citation(elasticnet)
citation("elasticnet")
# Load libraries
library(rstudioapi)
library(roxygen2)
# Set directory
setwd(dirname(getActiveDocumentContext()$path))
install.packages("../TwoStepSDFM_0.0.0.2.tar.gz", repos = NULL, type = "source")
